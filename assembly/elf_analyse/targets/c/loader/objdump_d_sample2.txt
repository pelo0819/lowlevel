
sample2:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <_init-0xcab>
 328:	78 38                	js     362 <_init-0xc9e>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	10 00                	adc    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    $0x0,%al
 35a:	00 00                	add    %al,(%rax)
 35c:	14 00                	adc    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	03 00                	add    (%rax),%eax
 362:	00 00                	add    %al,(%rax)
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push %rbp
 367:	00 6e 7c             	add    %ch,0x7c(%rsi)
 36a:	14 7b                	adc    $0x7b,%al
 36c:	80 75 0b 77          	xorb   $0x77,0xb(%rbp)
 370:	4c 33 b2 ca 0f 0b 54 	xor    0x540b0fca(%rdx),%r14
 377:	94                   	xchg   %eax,%esp
 378:	ad                   	lods   %ds:(%rsi),%eax
 379:	aa                   	stos   %al,%es:(%rdi)
 37a:	8d                   	.byte 0x8d
 37b:	05                   	.byte 0x5

Disassembly of section .note.ABI-tag:

000000000000037c <.note.ABI-tag>:
 37c:	04 00                	add    $0x0,%al
 37e:	00 00                	add    %al,(%rax)
 380:	10 00                	adc    %al,(%rax)
 382:	00 00                	add    %al,(%rax)
 384:	01 00                	add    %eax,(%rax)
 386:	00 00                	add    %al,(%rax)
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push %rbp
 38b:	00 00                	add    %al,(%rax)
 38d:	00 00                	add    %al,(%rax)
 38f:	00 03                	add    %al,(%rbx)
 391:	00 00                	add    %al,(%rax)
 393:	00 02                	add    %al,(%rdx)
 395:	00 00                	add    %al,(%rax)
 397:	00 00                	add    %al,(%rax)
 399:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    (%rax),%al
 3a2:	00 00                	add    %al,(%rax)
 3a4:	08 00                	or     %al,(%rax)
 3a6:	00 00                	add    %al,(%rax)
 3a8:	01 00                	add    %eax,(%rax)
 3aa:	00 00                	add    %al,(%rax)
 3ac:	06                   	(bad)  
 3ad:	00 00                	add    %al,(%rax)
 3af:	00 00                	add    %al,(%rax)
 3b1:	00 81 00 00 01 10    	add    %al,0x10010000(%rcx)
 3b7:	00 08                	add    %cl,(%rax)
 3b9:	00 00                	add    %al,(%rax)
 3bb:	00 00                	add    %al,(%rax)
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 28                	add    %ch,(%rax)
 3c1:	1d 8c 1c d1 65       	sbb    $0x65d11c8c,%eax
 3c6:	ce                   	(bad)  
 3c7:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

00000000000003c8 <.dynsym>:
	...
 3e0:	62                   	(bad)  
 3e1:	00 00                	add    %al,(%rax)
 3e3:	00 20                	add    %ah,(%rax)
	...
 3f5:	00 00                	add    %al,(%rax)
 3f7:	00 0b                	add    %cl,(%rbx)
 3f9:	00 00                	add    %al,(%rax)
 3fb:	00 12                	add    %dl,(%rdx)
	...
 40d:	00 00                	add    %al,(%rax)
 40f:	00 24 00             	add    %ah,(%rax,%rax,1)
 412:	00 00                	add    %al,(%rax)
 414:	12 00                	adc    (%rax),%al
	...
 426:	00 00                	add    %al,(%rax)
 428:	3a 00                	cmp    (%rax),%al
 42a:	00 00                	add    %al,(%rax)
 42c:	12 00                	adc    (%rax),%al
	...
 43e:	00 00                	add    %al,(%rax)
 440:	23 00                	and    (%rax),%eax
 442:	00 00                	add    %al,(%rax)
 444:	12 00                	adc    (%rax),%al
	...
 456:	00 00                	add    %al,(%rax)
 458:	7e 00                	jle    45a <_init-0xba6>
 45a:	00 00                	add    %al,(%rax)
 45c:	20 00                	and    %al,(%rax)
	...
 46e:	00 00                	add    %al,(%rax)
 470:	8d 00                	lea    (%rax),%eax
 472:	00 00                	add    %al,(%rax)
 474:	20 00                	and    %al,(%rax)
	...
 486:	00 00                	add    %al,(%rax)
 488:	1c 00                	sbb    $0x0,%al
 48a:	00 00                	add    %al,(%rax)
 48c:	11 00                	adc    %eax,(%rax)
 48e:	1a 00                	sbb    (%rax),%al
 490:	20 40 00             	and    %al,0x0(%rax)
 493:	00 00                	add    %al,(%rax)
 495:	00 00                	add    %al,(%rax)
 497:	00 08                	add    %cl,(%rax)
 499:	00 00                	add    %al,(%rax)
 49b:	00 00                	add    %al,(%rax)
 49d:	00 00                	add    %al,(%rax)
 49f:	00 2b                	add    %ch,(%rbx)
 4a1:	00 00                	add    %al,(%rax)
 4a3:	00 22                	add    %ah,(%rdx)
	...

Disassembly of section .dynstr:

00000000000004b8 <.dynstr>:
 4b8:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 4bc:	63 2e                	movslq (%rsi),%ebp
 4be:	73 6f                	jae    52f <_init-0xad1>
 4c0:	2e 36 00 5f 5f       	cs add %bl,%ss:0x5f(%rdi)
 4c5:	73 74                	jae    53b <_init-0xac5>
 4c7:	61                   	(bad)  
 4c8:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
 4cb:	63 68 6b             	movslq 0x6b(%rax),%ebp
 4ce:	5f                   	pop    %rdi
 4cf:	66 61                	data16 (bad) 
 4d1:	69 6c 00 73 74 64 6f 	imul   $0x756f6474,0x73(%rax,%rax,1),%ebp
 4d8:	75 
 4d9:	74 00                	je     4db <_init-0xb25>
 4db:	66 70 72             	data16 jo 550 <_init-0xab0>
 4de:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
 4e5:	63 78 61             	movslq 0x61(%rax),%edi
 4e8:	5f                   	pop    %rdi
 4e9:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 4ef:	7a 65                	jp     556 <_init-0xaaa>
 4f1:	00 5f 5f             	add    %bl,0x5f(%rdi)
 4f4:	6c                   	insb   (%dx),%es:(%rdi)
 4f5:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 4fc:	72 74                	jb     572 <_init-0xa8e>
 4fe:	5f                   	pop    %rdi
 4ff:	6d                   	insl   (%dx),%es:(%rdi)
 500:	61                   	(bad)  
 501:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
 508:	43 5f                	rex.XB pop %r15
 50a:	32 2e                	xor    (%rsi),%ch
 50c:	34 00                	xor    $0x0,%al
 50e:	47                   	rex.RXB
 50f:	4c                   	rex.WR
 510:	49                   	rex.WB
 511:	42                   	rex.X
 512:	43 5f                	rex.XB pop %r15
 514:	32 2e                	xor    (%rsi),%ch
 516:	32 2e                	xor    (%rsi),%ch
 518:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 51d:	4d 5f                	rex.WRB pop %r15
 51f:	64 65 72 65          	fs gs jb 588 <_init-0xa78>
 523:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 52a:	4d 
 52b:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 52d:	6f                   	outsl  %ds:(%rsi),(%dx)
 52e:	6e                   	outsb  %ds:(%rsi),(%dx)
 52f:	65 54                	gs push %rsp
 531:	61                   	(bad)  
 532:	62                   	(bad)  
 533:	6c                   	insb   (%dx),%es:(%rdi)
 534:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 538:	67 6d                	insl   (%dx),%es:(%edi)
 53a:	6f                   	outsl  %ds:(%rsi),(%dx)
 53b:	6e                   	outsb  %ds:(%rsi),(%dx)
 53c:	5f                   	pop    %rdi
 53d:	73 74                	jae    5b3 <_init-0xa4d>
 53f:	61                   	(bad)  
 540:	72 74                	jb     5b6 <_init-0xa4a>
 542:	5f                   	pop    %rdi
 543:	5f                   	pop    %rdi
 544:	00 5f 49             	add    %bl,0x49(%rdi)
 547:	54                   	push   %rsp
 548:	4d 5f                	rex.WRB pop %r15
 54a:	72 65                	jb     5b1 <_init-0xa4f>
 54c:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 553:	4d 
 554:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 556:	6f                   	outsl  %ds:(%rsi),(%dx)
 557:	6e                   	outsb  %ds:(%rsi),(%dx)
 558:	65 54                	gs push %rsp
 55a:	61                   	(bad)  
 55b:	62                   	.byte 0x62
 55c:	6c                   	insb   (%dx),%es:(%rdi)
 55d:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000560 <.gnu.version>:
 560:	00 00                	add    %al,(%rax)
 562:	00 00                	add    %al,(%rax)
 564:	03 00                	add    (%rax),%eax
 566:	02 00                	add    (%rax),%al
 568:	02 00                	add    (%rax),%al
 56a:	02 00                	add    (%rax),%al
 56c:	00 00                	add    %al,(%rax)
 56e:	00 00                	add    %al,(%rax)
 570:	02 00                	add    (%rax),%al
 572:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000578 <.gnu.version_r>:
 578:	01 00                	add    %eax,(%rax)
 57a:	02 00                	add    (%rax),%al
 57c:	01 00                	add    %eax,(%rax)
 57e:	00 00                	add    %al,(%rax)
 580:	10 00                	adc    %al,(%rax)
 582:	00 00                	add    %al,(%rax)
 584:	00 00                	add    %al,(%rax)
 586:	00 00                	add    %al,(%rax)
 588:	14 69                	adc    $0x69,%al
 58a:	69 0d 00 00 03 00 4c 	imul   $0x4c,0x30000(%rip),%ecx        # 30594 <_end+0x2c564>
 591:	00 00 00 
 594:	10 00                	adc    %al,(%rax)
 596:	00 00                	add    %al,(%rax)
 598:	75 1a                	jne    5b4 <_init-0xa4c>
 59a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 5a0:	56                   	push   %rsi
 5a1:	00 00                	add    %al,(%rax)
 5a3:	00 00                	add    %al,(%rax)
 5a5:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000000005a8 <.rela.dyn>:
 5a8:	a8 3d                	test   $0x3d,%al
 5aa:	00 00                	add    %al,(%rax)
 5ac:	00 00                	add    %al,(%rax)
 5ae:	00 00                	add    %al,(%rax)
 5b0:	08 00                	or     %al,(%rax)
 5b2:	00 00                	add    %al,(%rax)
 5b4:	00 00                	add    %al,(%rax)
 5b6:	00 00                	add    %al,(%rax)
 5b8:	80 11 00             	adcb   $0x0,(%rcx)
 5bb:	00 00                	add    %al,(%rax)
 5bd:	00 00                	add    %al,(%rax)
 5bf:	00 b0 3d 00 00 00    	add    %dh,0x3d(%rax)
 5c5:	00 00                	add    %al,(%rax)
 5c7:	00 08                	add    %cl,(%rax)
 5c9:	00 00                	add    %al,(%rax)
 5cb:	00 00                	add    %al,(%rax)
 5cd:	00 00                	add    %al,(%rax)
 5cf:	00 40 11             	add    %al,0x11(%rax)
 5d2:	00 00                	add    %al,(%rax)
 5d4:	00 00                	add    %al,(%rax)
 5d6:	00 00                	add    %al,(%rax)
 5d8:	08 40 00             	or     %al,0x0(%rax)
 5db:	00 00                	add    %al,(%rax)
 5dd:	00 00                	add    %al,(%rax)
 5df:	00 08                	add    %cl,(%rax)
 5e1:	00 00                	add    %al,(%rax)
 5e3:	00 00                	add    %al,(%rax)
 5e5:	00 00                	add    %al,(%rax)
 5e7:	00 08                	add    %cl,(%rax)
 5e9:	40 00 00             	add    %al,(%rax)
 5ec:	00 00                	add    %al,(%rax)
 5ee:	00 00                	add    %al,(%rax)
 5f0:	d8 3f                	fdivrs (%rdi)
 5f2:	00 00                	add    %al,(%rax)
 5f4:	00 00                	add    %al,(%rax)
 5f6:	00 00                	add    %al,(%rax)
 5f8:	06                   	(bad)  
 5f9:	00 00                	add    %al,(%rax)
 5fb:	00 01                	add    %al,(%rcx)
	...
 605:	00 00                	add    %al,(%rax)
 607:	00 e0                	add    %ah,%al
 609:	3f                   	(bad)  
 60a:	00 00                	add    %al,(%rax)
 60c:	00 00                	add    %al,(%rax)
 60e:	00 00                	add    %al,(%rax)
 610:	06                   	(bad)  
 611:	00 00                	add    %al,(%rax)
 613:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 61e:	00 00                	add    %al,(%rax)
 620:	e8 3f 00 00 00       	callq  664 <_init-0x99c>
 625:	00 00                	add    %al,(%rax)
 627:	00 06                	add    %al,(%rsi)
 629:	00 00                	add    %al,(%rax)
 62b:	00 06                	add    %al,(%rsi)
	...
 635:	00 00                	add    %al,(%rax)
 637:	00 f0                	add    %dh,%al
 639:	3f                   	(bad)  
 63a:	00 00                	add    %al,(%rax)
 63c:	00 00                	add    %al,(%rax)
 63e:	00 00                	add    %al,(%rax)
 640:	06                   	(bad)  
 641:	00 00                	add    %al,(%rax)
 643:	00 07                	add    %al,(%rdi)
	...
 64d:	00 00                	add    %al,(%rax)
 64f:	00 f8                	add    %bh,%al
 651:	3f                   	(bad)  
 652:	00 00                	add    %al,(%rax)
 654:	00 00                	add    %al,(%rax)
 656:	00 00                	add    %al,(%rax)
 658:	06                   	(bad)  
 659:	00 00                	add    %al,(%rax)
 65b:	00 09                	add    %cl,(%rcx)
	...
 665:	00 00                	add    %al,(%rax)
 667:	00 20                	add    %ah,(%rax)
 669:	40 00 00             	add    %al,(%rax)
 66c:	00 00                	add    %al,(%rax)
 66e:	00 00                	add    %al,(%rax)
 670:	05 00 00 00 08       	add    $0x8000000,%eax
	...

Disassembly of section .rela.plt:

0000000000000680 <.rela.plt>:
 680:	c0 3f 00             	sarb   $0x0,(%rdi)
 683:	00 00                	add    %al,(%rax)
 685:	00 00                	add    %al,(%rax)
 687:	00 07                	add    %al,(%rdi)
 689:	00 00                	add    %al,(%rax)
 68b:	00 02                	add    %al,(%rdx)
	...
 695:	00 00                	add    %al,(%rax)
 697:	00 c8                	add    %cl,%al
 699:	3f                   	(bad)  
 69a:	00 00                	add    %al,(%rax)
 69c:	00 00                	add    %al,(%rax)
 69e:	00 00                	add    %al,(%rax)
 6a0:	07                   	(bad)  
 6a1:	00 00                	add    %al,(%rax)
 6a3:	00 03                	add    %al,(%rbx)
	...
 6ad:	00 00                	add    %al,(%rax)
 6af:	00 d0                	add    %dl,%al
 6b1:	3f                   	(bad)  
 6b2:	00 00                	add    %al,(%rax)
 6b4:	00 00                	add    %al,(%rax)
 6b6:	00 00                	add    %al,(%rax)
 6b8:	07                   	(bad)  
 6b9:	00 00                	add    %al,(%rax)
 6bb:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 6c1 <_init-0x93f>
 6c1:	00 00                	add    %al,(%rax)
 6c3:	00 00                	add    %al,(%rax)
 6c5:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 8a 2f 00 00    	pushq  0x2f8a(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 8b 2f 00 00 	bnd jmpq *0x2f8b(%rip)        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop

Disassembly of section .plt.got:

0000000000001060 <__cxa_finalize@plt>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	f2 ff 25 8d 2f 00 00 	bnd jmpq *0x2f8d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    106b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001070 <__stack_chk_fail@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 45 2f 00 00 	bnd jmpq *0x2f45(%rip)        # 3fc0 <__stack_chk_fail@GLIBC_2.4>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001080 <printf@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 3d 2f 00 00 	bnd jmpq *0x2f3d(%rip)        # 3fc8 <printf@GLIBC_2.2.5>
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001090 <fprintf@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 35 2f 00 00 	bnd jmpq *0x2f35(%rip)        # 3fd0 <fprintf@GLIBC_2.2.5>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000010a0 <_start>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	31 ed                	xor    %ebp,%ebp
    10a6:	49 89 d1             	mov    %rdx,%r9
    10a9:	5e                   	pop    %rsi
    10aa:	48 89 e2             	mov    %rsp,%rdx
    10ad:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10b1:	50                   	push   %rax
    10b2:	54                   	push   %rsp
    10b3:	4c 8d 05 06 02 00 00 	lea    0x206(%rip),%r8        # 12c0 <__libc_csu_fini>
    10ba:	48 8d 0d 8f 01 00 00 	lea    0x18f(%rip),%rcx        # 1250 <__libc_csu_init>
    10c1:	48 8d 3d e4 00 00 00 	lea    0xe4(%rip),%rdi        # 11ac <main>
    10c8:	ff 15 12 2f 00 00    	callq  *0x2f12(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ce:	f4                   	hlt    
    10cf:	90                   	nop

00000000000010d0 <deregister_tm_clones>:
    10d0:	48 8d 3d 49 2f 00 00 	lea    0x2f49(%rip),%rdi        # 4020 <stdout@@GLIBC_2.2.5>
    10d7:	48 8d 05 42 2f 00 00 	lea    0x2f42(%rip),%rax        # 4020 <stdout@@GLIBC_2.2.5>
    10de:	48 39 f8             	cmp    %rdi,%rax
    10e1:	74 15                	je     10f8 <deregister_tm_clones+0x28>
    10e3:	48 8b 05 ee 2e 00 00 	mov    0x2eee(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10ea:	48 85 c0             	test   %rax,%rax
    10ed:	74 09                	je     10f8 <deregister_tm_clones+0x28>
    10ef:	ff e0                	jmpq   *%rax
    10f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10f8:	c3                   	retq   
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <register_tm_clones>:
    1100:	48 8d 3d 19 2f 00 00 	lea    0x2f19(%rip),%rdi        # 4020 <stdout@@GLIBC_2.2.5>
    1107:	48 8d 35 12 2f 00 00 	lea    0x2f12(%rip),%rsi        # 4020 <stdout@@GLIBC_2.2.5>
    110e:	48 29 fe             	sub    %rdi,%rsi
    1111:	48 89 f0             	mov    %rsi,%rax
    1114:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1118:	48 c1 f8 03          	sar    $0x3,%rax
    111c:	48 01 c6             	add    %rax,%rsi
    111f:	48 d1 fe             	sar    %rsi
    1122:	74 14                	je     1138 <register_tm_clones+0x38>
    1124:	48 8b 05 c5 2e 00 00 	mov    0x2ec5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    112b:	48 85 c0             	test   %rax,%rax
    112e:	74 08                	je     1138 <register_tm_clones+0x38>
    1130:	ff e0                	jmpq   *%rax
    1132:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1138:	c3                   	retq   
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <__do_global_dtors_aux>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	80 3d dd 2e 00 00 00 	cmpb   $0x0,0x2edd(%rip)        # 4028 <completed.8060>
    114b:	75 2b                	jne    1178 <__do_global_dtors_aux+0x38>
    114d:	55                   	push   %rbp
    114e:	48 83 3d a2 2e 00 00 	cmpq   $0x0,0x2ea2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1155:	00 
    1156:	48 89 e5             	mov    %rsp,%rbp
    1159:	74 0c                	je     1167 <__do_global_dtors_aux+0x27>
    115b:	48 8b 3d a6 2e 00 00 	mov    0x2ea6(%rip),%rdi        # 4008 <__dso_handle>
    1162:	e8 f9 fe ff ff       	callq  1060 <__cxa_finalize@plt>
    1167:	e8 64 ff ff ff       	callq  10d0 <deregister_tm_clones>
    116c:	c6 05 b5 2e 00 00 01 	movb   $0x1,0x2eb5(%rip)        # 4028 <completed.8060>
    1173:	5d                   	pop    %rbp
    1174:	c3                   	retq   
    1175:	0f 1f 00             	nopl   (%rax)
    1178:	c3                   	retq   
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <frame_dummy>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	e9 77 ff ff ff       	jmpq   1100 <register_tm_clones>

0000000000001189 <aaa>:
    1189:	f3 0f 1e fa          	endbr64 
    118d:	55                   	push   %rbp
    118e:	48 89 e5             	mov    %rsp,%rbp
    1191:	89 7d fc             	mov    %edi,-0x4(%rbp)
    1194:	83 45 fc 05          	addl   $0x5,-0x4(%rbp)
    1198:	8b 45 fc             	mov    -0x4(%rbp),%eax
    119b:	5d                   	pop    %rbp
    119c:	c3                   	retq   

000000000000119d <my_print>:
    119d:	f3 0f 1e fa          	endbr64 
    11a1:	55                   	push   %rbp
    11a2:	48 89 e5             	mov    %rsp,%rbp
    11a5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    11a9:	90                   	nop
    11aa:	5d                   	pop    %rbp
    11ab:	c3                   	retq   

00000000000011ac <main>:
    11ac:	f3 0f 1e fa          	endbr64 
    11b0:	55                   	push   %rbp
    11b1:	48 89 e5             	mov    %rsp,%rbp
    11b4:	48 83 ec 20          	sub    $0x20,%rsp
    11b8:	89 7d ec             	mov    %edi,-0x14(%rbp)
    11bb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    11bf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    11c6:	00 00 
    11c8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    11cc:	31 c0                	xor    %eax,%eax
    11ce:	c7 45 f2 68 65 6c 6c 	movl   $0x6c6c6568,-0xe(%rbp)
    11d5:	66 c7 45 f6 6f 00    	movw   $0x6f,-0xa(%rbp)
    11db:	48 8b 05 3e 2e 00 00 	mov    0x2e3e(%rip),%rax        # 4020 <stdout@@GLIBC_2.2.5>
    11e2:	48 8d 15 27 2e 00 00 	lea    0x2e27(%rip),%rdx        # 4010 <str>
    11e9:	48 8d 35 14 0e 00 00 	lea    0xe14(%rip),%rsi        # 2004 <_IO_stdin_used+0x4>
    11f0:	48 89 c7             	mov    %rax,%rdi
    11f3:	b8 00 00 00 00       	mov    $0x0,%eax
    11f8:	e8 93 fe ff ff       	callq  1090 <fprintf@plt>
    11fd:	48 8d 05 9c fe ff ff 	lea    -0x164(%rip),%rax        # 10a0 <_start>
    1204:	48 89 c6             	mov    %rax,%rsi
    1207:	48 8d 3d fa 0d 00 00 	lea    0xdfa(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    120e:	b8 00 00 00 00       	mov    $0x0,%eax
    1213:	e8 68 fe ff ff       	callq  1080 <printf@plt>
    1218:	bf 43 00 00 00       	mov    $0x43,%edi
    121d:	e8 67 ff ff ff       	callq  1189 <aaa>
    1222:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    1226:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    122d:	00 00 
    122f:	74 05                	je     1236 <main+0x8a>
    1231:	e8 3a fe ff ff       	callq  1070 <__stack_chk_fail@plt>
    1236:	c9                   	leaveq 
    1237:	c3                   	retq   

0000000000001238 <sample>:
    1238:	f3 0f 1e fa          	endbr64 
    123c:	55                   	push   %rbp
    123d:	48 89 e5             	mov    %rsp,%rbp
    1240:	89 7d fc             	mov    %edi,-0x4(%rbp)
    1243:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1247:	b8 09 03 00 00       	mov    $0x309,%eax
    124c:	5d                   	pop    %rbp
    124d:	c3                   	retq   
    124e:	66 90                	xchg   %ax,%ax

0000000000001250 <__libc_csu_init>:
    1250:	f3 0f 1e fa          	endbr64 
    1254:	41 57                	push   %r15
    1256:	4c 8d 3d 4b 2b 00 00 	lea    0x2b4b(%rip),%r15        # 3da8 <__frame_dummy_init_array_entry>
    125d:	41 56                	push   %r14
    125f:	49 89 d6             	mov    %rdx,%r14
    1262:	41 55                	push   %r13
    1264:	49 89 f5             	mov    %rsi,%r13
    1267:	41 54                	push   %r12
    1269:	41 89 fc             	mov    %edi,%r12d
    126c:	55                   	push   %rbp
    126d:	48 8d 2d 3c 2b 00 00 	lea    0x2b3c(%rip),%rbp        # 3db0 <__do_global_dtors_aux_fini_array_entry>
    1274:	53                   	push   %rbx
    1275:	4c 29 fd             	sub    %r15,%rbp
    1278:	48 83 ec 08          	sub    $0x8,%rsp
    127c:	e8 7f fd ff ff       	callq  1000 <_init>
    1281:	48 c1 fd 03          	sar    $0x3,%rbp
    1285:	74 1f                	je     12a6 <__libc_csu_init+0x56>
    1287:	31 db                	xor    %ebx,%ebx
    1289:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1290:	4c 89 f2             	mov    %r14,%rdx
    1293:	4c 89 ee             	mov    %r13,%rsi
    1296:	44 89 e7             	mov    %r12d,%edi
    1299:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    129d:	48 83 c3 01          	add    $0x1,%rbx
    12a1:	48 39 dd             	cmp    %rbx,%rbp
    12a4:	75 ea                	jne    1290 <__libc_csu_init+0x40>
    12a6:	48 83 c4 08          	add    $0x8,%rsp
    12aa:	5b                   	pop    %rbx
    12ab:	5d                   	pop    %rbp
    12ac:	41 5c                	pop    %r12
    12ae:	41 5d                	pop    %r13
    12b0:	41 5e                	pop    %r14
    12b2:	41 5f                	pop    %r15
    12b4:	c3                   	retq   
    12b5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    12bc:	00 00 00 00 

00000000000012c0 <__libc_csu_fini>:
    12c0:	f3 0f 1e fa          	endbr64 
    12c4:	c3                   	retq   

Disassembly of section .fini:

00000000000012c8 <_fini>:
    12c8:	f3 0f 1e fa          	endbr64 
    12cc:	48 83 ec 08          	sub    $0x8,%rsp
    12d0:	48 83 c4 08          	add    $0x8,%rsp
    12d4:	c3                   	retq   

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	25 73 0a 00 5f       	and    $0x5f000a73,%eax
    2009:	73 74                	jae    207f <__GNU_EH_FRAME_HDR+0x6b>
    200b:	61                   	(bad)  
    200c:	72 74                	jb     2082 <__GNU_EH_FRAME_HDR+0x6e>
    200e:	3d 25 70 0a 00       	cmp    $0xa7025,%eax

Disassembly of section .eh_frame_hdr:

0000000000002014 <__GNU_EH_FRAME_HDR>:
    2014:	01 1b                	add    %ebx,(%rbx)
    2016:	03 3b                	add    (%rbx),%edi
    2018:	58                   	pop    %rax
    2019:	00 00                	add    %al,(%rax)
    201b:	00 0a                	add    %cl,(%rdx)
    201d:	00 00                	add    %al,(%rax)
    201f:	00 0c f0             	add    %cl,(%rax,%rsi,8)
    2022:	ff                   	(bad)  
    2023:	ff 8c 00 00 00 4c f0 	decl   -0xfb40000(%rax,%rax,1)
    202a:	ff                   	(bad)  
    202b:	ff b4 00 00 00 5c f0 	pushq  -0xfa40000(%rax,%rax,1)
    2032:	ff                   	(bad)  
    2033:	ff cc                	dec    %esp
    2035:	00 00                	add    %al,(%rax)
    2037:	00 8c f0 ff ff 74 00 	add    %cl,0x74ffff(%rax,%rsi,8)
    203e:	00 00                	add    %al,(%rax)
    2040:	75 f1                	jne    2033 <__GNU_EH_FRAME_HDR+0x1f>
    2042:	ff                   	(bad)  
    2043:	ff e4                	jmpq   *%rsp
    2045:	00 00                	add    %al,(%rax)
    2047:	00 89 f1 ff ff 04    	add    %cl,0x4fffff1(%rcx)
    204d:	01 00                	add    %eax,(%rax)
    204f:	00 98 f1 ff ff 24    	add    %bl,0x24fffff1(%rax)
    2055:	01 00                	add    %eax,(%rax)
    2057:	00 24 f2             	add    %ah,(%rdx,%rsi,8)
    205a:	ff                   	(bad)  
    205b:	ff 44 01 00          	incl   0x0(%rcx,%rax,1)
    205f:	00 3c f2             	add    %bh,(%rdx,%rsi,8)
    2062:	ff                   	(bad)  
    2063:	ff 64 01 00          	jmpq   *0x0(%rcx,%rax,1)
    2067:	00 ac f2 ff ff ac 01 	add    %ch,0x1acffff(%rdx,%rsi,8)
	...

Disassembly of section .eh_frame:

0000000000002070 <__FRAME_END__-0x164>:
    2070:	14 00                	adc    $0x0,%al
    2072:	00 00                	add    %al,(%rax)
    2074:	00 00                	add    %al,(%rax)
    2076:	00 00                	add    %al,(%rax)
    2078:	01 7a 52             	add    %edi,0x52(%rdx)
    207b:	00 01                	add    %al,(%rcx)
    207d:	78 10                	js     208f <__GNU_EH_FRAME_HDR+0x7b>
    207f:	01 1b                	add    %ebx,(%rbx)
    2081:	0c 07                	or     $0x7,%al
    2083:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    2089:	00 00                	add    %al,(%rax)
    208b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    208e:	00 00                	add    %al,(%rax)
    2090:	10 f0                	adc    %dh,%al
    2092:	ff                   	(bad)  
    2093:	ff 2f                	ljmp   *(%rdi)
    2095:	00 00                	add    %al,(%rax)
    2097:	00 00                	add    %al,(%rax)
    2099:	44 07                	rex.R (bad) 
    209b:	10 00                	adc    %al,(%rax)
    209d:	00 00                	add    %al,(%rax)
    209f:	00 24 00             	add    %ah,(%rax,%rax,1)
    20a2:	00 00                	add    %al,(%rax)
    20a4:	34 00                	xor    $0x0,%al
    20a6:	00 00                	add    %al,(%rax)
    20a8:	78 ef                	js     2099 <__GNU_EH_FRAME_HDR+0x85>
    20aa:	ff                   	(bad)  
    20ab:	ff 40 00             	incl   0x0(%rax)
    20ae:	00 00                	add    %al,(%rax)
    20b0:	00 0e                	add    %cl,(%rsi)
    20b2:	10 46 0e             	adc    %al,0xe(%rsi)
    20b5:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    20b8:	0b 77 08             	or     0x8(%rdi),%esi
    20bb:	80 00 3f             	addb   $0x3f,(%rax)
    20be:	1a 3a                	sbb    (%rdx),%bh
    20c0:	2a 33                	sub    (%rbx),%dh
    20c2:	24 22                	and    $0x22,%al
    20c4:	00 00                	add    %al,(%rax)
    20c6:	00 00                	add    %al,(%rax)
    20c8:	14 00                	adc    $0x0,%al
    20ca:	00 00                	add    %al,(%rax)
    20cc:	5c                   	pop    %rsp
    20cd:	00 00                	add    %al,(%rax)
    20cf:	00 90 ef ff ff 10    	add    %dl,0x10ffffef(%rax)
	...
    20dd:	00 00                	add    %al,(%rax)
    20df:	00 14 00             	add    %dl,(%rax,%rax,1)
    20e2:	00 00                	add    %al,(%rax)
    20e4:	74 00                	je     20e6 <__GNU_EH_FRAME_HDR+0xd2>
    20e6:	00 00                	add    %al,(%rax)
    20e8:	88 ef                	mov    %ch,%bh
    20ea:	ff                   	(bad)  
    20eb:	ff 30                	pushq  (%rax)
	...
    20f5:	00 00                	add    %al,(%rax)
    20f7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    20fa:	00 00                	add    %al,(%rax)
    20fc:	8c 00                	mov    %es,(%rax)
    20fe:	00 00                	add    %al,(%rax)
    2100:	89 f0                	mov    %esi,%eax
    2102:	ff                   	(bad)  
    2103:	ff 14 00             	callq  *(%rax,%rax,1)
    2106:	00 00                	add    %al,(%rax)
    2108:	00 45 0e             	add    %al,0xe(%rbp)
    210b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2111:	4b 0c 07             	rex.WXB or $0x7,%al
    2114:	08 00                	or     %al,(%rax)
    2116:	00 00                	add    %al,(%rax)
    2118:	1c 00                	sbb    $0x0,%al
    211a:	00 00                	add    %al,(%rax)
    211c:	ac                   	lods   %ds:(%rsi),%al
    211d:	00 00                	add    %al,(%rax)
    211f:	00 7d f0             	add    %bh,-0x10(%rbp)
    2122:	ff                   	(bad)  
    2123:	ff 0f                	decl   (%rdi)
    2125:	00 00                	add    %al,(%rax)
    2127:	00 00                	add    %al,(%rax)
    2129:	45 0e                	rex.RB (bad) 
    212b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2131:	46 0c 07             	rex.RX or $0x7,%al
    2134:	08 00                	or     %al,(%rax)
    2136:	00 00                	add    %al,(%rax)
    2138:	1c 00                	sbb    $0x0,%al
    213a:	00 00                	add    %al,(%rax)
    213c:	cc                   	int3   
    213d:	00 00                	add    %al,(%rax)
    213f:	00 6c f0 ff          	add    %ch,-0x1(%rax,%rsi,8)
    2143:	ff 8c 00 00 00 00 45 	decl   0x45000000(%rax,%rax,1)
    214a:	0e                   	(bad)  
    214b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2151:	02 83 0c 07 08 00    	add    0x8070c(%rbx),%al
    2157:	00 1c 00             	add    %bl,(%rax,%rax,1)
    215a:	00 00                	add    %al,(%rax)
    215c:	ec                   	in     (%dx),%al
    215d:	00 00                	add    %al,(%rax)
    215f:	00 d8                	add    %bl,%al
    2161:	f0 ff                	lock (bad) 
    2163:	ff 16                	callq  *(%rsi)
    2165:	00 00                	add    %al,(%rax)
    2167:	00 00                	add    %al,(%rax)
    2169:	45 0e                	rex.RB (bad) 
    216b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2171:	4d 0c 07             	rex.WRB or $0x7,%al
    2174:	08 00                	or     %al,(%rax)
    2176:	00 00                	add    %al,(%rax)
    2178:	44 00 00             	add    %r8b,(%rax)
    217b:	00 0c 01             	add    %cl,(%rcx,%rax,1)
    217e:	00 00                	add    %al,(%rax)
    2180:	d0 f0                	shl    %al
    2182:	ff                   	(bad)  
    2183:	ff 65 00             	jmpq   *0x0(%rbp)
    2186:	00 00                	add    %al,(%rax)
    2188:	00 46 0e             	add    %al,0xe(%rsi)
    218b:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    2191:	8e 03                	mov    (%rbx),%es
    2193:	45 0e                	rex.RB (bad) 
    2195:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    219b:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86302fe5 <_end+0xffffffff862fefb5>
    21a1:	06                   	(bad)  
    21a2:	48 0e                	rex.W (bad) 
    21a4:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    21aa:	6e                   	outsb  %ds:(%rsi),(%dx)
    21ab:	0e                   	(bad)  
    21ac:	38 41 0e             	cmp    %al,0xe(%rcx)
    21af:	30 41 0e             	xor    %al,0xe(%rcx)
    21b2:	28 42 0e             	sub    %al,0xe(%rdx)
    21b5:	20 42 0e             	and    %al,0xe(%rdx)
    21b8:	18 42 0e             	sbb    %al,0xe(%rdx)
    21bb:	10 42 0e             	adc    %al,0xe(%rdx)
    21be:	08 00                	or     %al,(%rax)
    21c0:	10 00                	adc    %al,(%rax)
    21c2:	00 00                	add    %al,(%rax)
    21c4:	54                   	push   %rsp
    21c5:	01 00                	add    %eax,(%rax)
    21c7:	00 f8                	add    %bh,%al
    21c9:	f0 ff                	lock (bad) 
    21cb:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 21d1 <__GNU_EH_FRAME_HDR+0x1bd>
    21d1:	00 00                	add    %al,(%rax)
	...

00000000000021d4 <__FRAME_END__>:
    21d4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003da8 <__frame_dummy_init_array_entry>:
    3da8:	80 11 00             	adcb   $0x0,(%rcx)
    3dab:	00 00                	add    %al,(%rax)
    3dad:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003db0 <__do_global_dtors_aux_fini_array_entry>:
    3db0:	40 11 00             	rex adc %eax,(%rax)
    3db3:	00 00                	add    %al,(%rax)
    3db5:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003db8 <_DYNAMIC>:
    3db8:	01 00                	add    %eax,(%rax)
    3dba:	00 00                	add    %al,(%rax)
    3dbc:	00 00                	add    %al,(%rax)
    3dbe:	00 00                	add    %al,(%rax)
    3dc0:	01 00                	add    %eax,(%rax)
    3dc2:	00 00                	add    %al,(%rax)
    3dc4:	00 00                	add    %al,(%rax)
    3dc6:	00 00                	add    %al,(%rax)
    3dc8:	0c 00                	or     $0x0,%al
    3dca:	00 00                	add    %al,(%rax)
    3dcc:	00 00                	add    %al,(%rax)
    3dce:	00 00                	add    %al,(%rax)
    3dd0:	00 10                	add    %dl,(%rax)
    3dd2:	00 00                	add    %al,(%rax)
    3dd4:	00 00                	add    %al,(%rax)
    3dd6:	00 00                	add    %al,(%rax)
    3dd8:	0d 00 00 00 00       	or     $0x0,%eax
    3ddd:	00 00                	add    %al,(%rax)
    3ddf:	00 c8                	add    %cl,%al
    3de1:	12 00                	adc    (%rax),%al
    3de3:	00 00                	add    %al,(%rax)
    3de5:	00 00                	add    %al,(%rax)
    3de7:	00 19                	add    %bl,(%rcx)
    3de9:	00 00                	add    %al,(%rax)
    3deb:	00 00                	add    %al,(%rax)
    3ded:	00 00                	add    %al,(%rax)
    3def:	00 a8 3d 00 00 00    	add    %ch,0x3d(%rax)
    3df5:	00 00                	add    %al,(%rax)
    3df7:	00 1b                	add    %bl,(%rbx)
    3df9:	00 00                	add    %al,(%rax)
    3dfb:	00 00                	add    %al,(%rax)
    3dfd:	00 00                	add    %al,(%rax)
    3dff:	00 08                	add    %cl,(%rax)
    3e01:	00 00                	add    %al,(%rax)
    3e03:	00 00                	add    %al,(%rax)
    3e05:	00 00                	add    %al,(%rax)
    3e07:	00 1a                	add    %bl,(%rdx)
    3e09:	00 00                	add    %al,(%rax)
    3e0b:	00 00                	add    %al,(%rax)
    3e0d:	00 00                	add    %al,(%rax)
    3e0f:	00 b0 3d 00 00 00    	add    %dh,0x3d(%rax)
    3e15:	00 00                	add    %al,(%rax)
    3e17:	00 1c 00             	add    %bl,(%rax,%rax,1)
    3e1a:	00 00                	add    %al,(%rax)
    3e1c:	00 00                	add    %al,(%rax)
    3e1e:	00 00                	add    %al,(%rax)
    3e20:	08 00                	or     %al,(%rax)
    3e22:	00 00                	add    %al,(%rax)
    3e24:	00 00                	add    %al,(%rax)
    3e26:	00 00                	add    %al,(%rax)
    3e28:	f5                   	cmc    
    3e29:	fe                   	(bad)  
    3e2a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e2d:	00 00                	add    %al,(%rax)
    3e2f:	00 a0 03 00 00 00    	add    %ah,0x3(%rax)
    3e35:	00 00                	add    %al,(%rax)
    3e37:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e3d <_DYNAMIC+0x85>
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 b8 04 00 00 00    	add    %bh,0x4(%rax)
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 06                	add    %al,(%rsi)
    3e49:	00 00                	add    %al,(%rax)
    3e4b:	00 00                	add    %al,(%rax)
    3e4d:	00 00                	add    %al,(%rax)
    3e4f:	00 c8                	add    %cl,%al
    3e51:	03 00                	add    (%rax),%eax
    3e53:	00 00                	add    %al,(%rax)
    3e55:	00 00                	add    %al,(%rax)
    3e57:	00 0a                	add    %cl,(%rdx)
    3e59:	00 00                	add    %al,(%rax)
    3e5b:	00 00                	add    %al,(%rax)
    3e5d:	00 00                	add    %al,(%rax)
    3e5f:	00 a7 00 00 00 00    	add    %ah,0x0(%rdi)
    3e65:	00 00                	add    %al,(%rax)
    3e67:	00 0b                	add    %cl,(%rbx)
    3e69:	00 00                	add    %al,(%rax)
    3e6b:	00 00                	add    %al,(%rax)
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 18                	add    %bl,(%rax)
    3e71:	00 00                	add    %al,(%rax)
    3e73:	00 00                	add    %al,(%rax)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3e7d <_DYNAMIC+0xc5>
	...
    3e85:	00 00                	add    %al,(%rax)
    3e87:	00 03                	add    %al,(%rbx)
    3e89:	00 00                	add    %al,(%rax)
    3e8b:	00 00                	add    %al,(%rax)
    3e8d:	00 00                	add    %al,(%rax)
    3e8f:	00 a8 3f 00 00 00    	add    %ch,0x3f(%rax)
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 02                	add    %al,(%rdx)
    3e99:	00 00                	add    %al,(%rax)
    3e9b:	00 00                	add    %al,(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 48 00             	add    %cl,0x0(%rax)
    3ea2:	00 00                	add    %al,(%rax)
    3ea4:	00 00                	add    %al,(%rax)
    3ea6:	00 00                	add    %al,(%rax)
    3ea8:	14 00                	adc    $0x0,%al
    3eaa:	00 00                	add    %al,(%rax)
    3eac:	00 00                	add    %al,(%rax)
    3eae:	00 00                	add    %al,(%rax)
    3eb0:	07                   	(bad)  
    3eb1:	00 00                	add    %al,(%rax)
    3eb3:	00 00                	add    %al,(%rax)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 17                	add    %dl,(%rdi)
    3eb9:	00 00                	add    %al,(%rax)
    3ebb:	00 00                	add    %al,(%rax)
    3ebd:	00 00                	add    %al,(%rax)
    3ebf:	00 80 06 00 00 00    	add    %al,0x6(%rax)
    3ec5:	00 00                	add    %al,(%rax)
    3ec7:	00 07                	add    %al,(%rdi)
    3ec9:	00 00                	add    %al,(%rax)
    3ecb:	00 00                	add    %al,(%rax)
    3ecd:	00 00                	add    %al,(%rax)
    3ecf:	00 a8 05 00 00 00    	add    %ch,0x5(%rax)
    3ed5:	00 00                	add    %al,(%rax)
    3ed7:	00 08                	add    %cl,(%rax)
    3ed9:	00 00                	add    %al,(%rax)
    3edb:	00 00                	add    %al,(%rax)
    3edd:	00 00                	add    %al,(%rax)
    3edf:	00 d8                	add    %bl,%al
    3ee1:	00 00                	add    %al,(%rax)
    3ee3:	00 00                	add    %al,(%rax)
    3ee5:	00 00                	add    %al,(%rax)
    3ee7:	00 09                	add    %cl,(%rcx)
    3ee9:	00 00                	add    %al,(%rax)
    3eeb:	00 00                	add    %al,(%rax)
    3eed:	00 00                	add    %al,(%rax)
    3eef:	00 18                	add    %bl,(%rax)
    3ef1:	00 00                	add    %al,(%rax)
    3ef3:	00 00                	add    %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 1e                	add    %bl,(%rsi)
    3ef9:	00 00                	add    %al,(%rax)
    3efb:	00 00                	add    %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 08                	add    %cl,(%rax)
    3f01:	00 00                	add    %al,(%rax)
    3f03:	00 00                	add    %al,(%rax)
    3f05:	00 00                	add    %al,(%rax)
    3f07:	00 fb                	add    %bh,%bl
    3f09:	ff                   	(bad)  
    3f0a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 01                	add    %al,(%rcx)
    3f11:	00 00                	add    %al,(%rax)
    3f13:	08 00                	or     %al,(%rax)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 fe                	add    %bh,%dh
    3f19:	ff                   	(bad)  
    3f1a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 78 05             	add    %bh,0x5(%rax)
    3f22:	00 00                	add    %al,(%rax)
    3f24:	00 00                	add    %al,(%rax)
    3f26:	00 00                	add    %al,(%rax)
    3f28:	ff                   	(bad)  
    3f29:	ff                   	(bad)  
    3f2a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 01                	add    %al,(%rcx)
    3f31:	00 00                	add    %al,(%rax)
    3f33:	00 00                	add    %al,(%rax)
    3f35:	00 00                	add    %al,(%rax)
    3f37:	00 f0                	add    %dh,%al
    3f39:	ff                   	(bad)  
    3f3a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f3d:	00 00                	add    %al,(%rax)
    3f3f:	00 60 05             	add    %ah,0x5(%rax)
    3f42:	00 00                	add    %al,(%rax)
    3f44:	00 00                	add    %al,(%rax)
    3f46:	00 00                	add    %al,(%rax)
    3f48:	f9                   	stc    
    3f49:	ff                   	(bad)  
    3f4a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f4d:	00 00                	add    %al,(%rax)
    3f4f:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000003fa8 <_GLOBAL_OFFSET_TABLE_>:
    3fa8:	b8 3d 00 00 00       	mov    $0x3d,%eax
	...
    3fbd:	00 00                	add    %al,(%rax)
    3fbf:	00 30                	add    %dh,(%rax)
    3fc1:	10 00                	adc    %al,(%rax)
    3fc3:	00 00                	add    %al,(%rax)
    3fc5:	00 00                	add    %al,(%rax)
    3fc7:	00 40 10             	add    %al,0x10(%rax)
    3fca:	00 00                	add    %al,(%rax)
    3fcc:	00 00                	add    %al,(%rax)
    3fce:	00 00                	add    %al,(%rax)
    3fd0:	50                   	push   %rax
    3fd1:	10 00                	adc    %al,(%rax)
	...

Disassembly of section .data:

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     %al,0x0(%rax)
    400b:	00 00                	add    %al,(%rax)
    400d:	00 00                	add    %al,(%rax)
	...

0000000000004010 <str>:
    4010:	68 65 65 6c 6f       	pushq  $0x6f6c6565
    4015:	0a 00                	or     (%rax),%al
	...

0000000000004018 <bear>:
    4018:	05                   	.byte 0x5
    4019:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000004020 <stdout@@GLIBC_2.2.5>:
	...

0000000000004028 <completed.8060>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0xf88>
   a:	74 75                	je     81 <_init-0xf7f>
   c:	20 39                	and    %bh,(%rcx)
   e:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  11:	30 2d 31 37 75 62    	xor    %ch,0x62753731(%rip)        # 62753748 <_end+0x6274f718>
  17:	75 6e                	jne    87 <_init-0xf79>
  19:	74 75                	je     90 <_init-0xf70>
  1b:	31 7e 32             	xor    %edi,0x32(%rsi)
  1e:	30 2e                	xor    %ch,(%rsi)
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 39                	and    %bh,(%rcx)
  25:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  28:	30 00                	xor    %al,(%rax)


rasm.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <dummy_func>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	90                   	nop
   9:	5d                   	pop    %rbp
   a:	c3                   	retq   

000000000000000b <func>:
   b:	f3 0f 1e fa          	endbr64 
   f:	55                   	push   %rbp
  10:	48 89 e5             	mov    %rsp,%rbp
  13:	8b 15 00 00 00 00    	mov    0x0(%rip),%edx        # 19 <func+0xe>
  19:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 1f <func+0x14>
  1f:	01 c2                	add    %eax,%edx
  21:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 27 <func+0x1c>
  27:	01 c2                	add    %eax,%edx
  29:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 2f <func+0x24>
  2f:	01 d0                	add    %edx,%eax
  31:	5d                   	pop    %rbp
  32:	c3                   	retq   

0000000000000033 <main>:
  33:	f3 0f 1e fa          	endbr64 
  37:	55                   	push   %rbp
  38:	48 89 e5             	mov    %rsp,%rbp
  3b:	b8 00 00 00 00       	mov    $0x0,%eax
  40:	e8 00 00 00 00       	callq  45 <main+0x12>
  45:	b8 00 00 00 00       	mov    $0x0,%eax
  4a:	e8 bc ff ff ff       	callq  b <func>
  4f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 56 <main+0x23>
  56:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 5d <main+0x2a>
  5d:	b8 00 00 00 00       	mov    $0x0,%eax
  62:	5d                   	pop    %rbp
  63:	c3                   	retq   
